{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Este projeto foi desenvolvido pela equipe do Met@ Aprendiz@gem UFABC com o intuito de servir como complemento \u00e0s aulas de Processamento da Informa\u00e7\u00e3o. Logo abordaremos os mesmos conceitos vistos em aula, entretanto, com uma outra abordagem buscando apresentar ao aluno uma nova perspectiva do que se pode realizar com programa\u00e7\u00e3o. O Arduino por se tratar de um open source project (uma plataforma aberta), tanto o hardware quanto seu software est\u00e3o dispon\u00edveis gratuitamente na internet. Dessa forma, existem diversas outras marcas de microcontroladores compat\u00edveis com o original e at\u00e9 mesmo a possibilidade do usu\u00e1rio montar sua pr\u00f3pria placa. Utilizaremos o modelo Arduino UNO R3 , mas tamb\u00e9m podem ser usadas outras marcas como Freeduino, Seeeduino, Boarduino, Sanguino, Roboduino, etc. Estas placas s\u00e3o totalmente compat\u00edveis com o Arduino IDE, Arduino Shields e tudo mais que voc\u00ea pode usar com uma placa Arduino Oficial.","title":"Sobre o Curso"},{"location":"Projetos/batteryCharger/","text":"Battery Charger Este projeto tem como objetivo simular de forma simples o controle de carga de uma bateria comum. Lista de materiais: 1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 2 Led Verde 1 Led Amarelo 1 Led Vermelho 4 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int pot = A0 ; int valor ; int vermelho = 13 ; int amarelo = 10 ; int verde2 = 7 ; int verde1 = 3 ; void setup () { Serial . begin ( 9600 ); } void loop () { valor = analogRead ( pot ); valor = map ( valor , 0 , 1023 , 0 , 255 ); Serial . print ( Valor do Potenciometro = ); Serial . println ( valor ); //Led Vermelho if ( incomingByte = 0 incomingByte 60 ){ digitalWrite ( vermelho , HIGH ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Vermelho ); } //Led Amarelo else if ( incomingByte = 60 incomingByte 120 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Amarelo ); } //Led Verde 2 else if ( incomingByte = 120 incomingByte 180 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , HIGH ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Verde 2 ); } //Led Verde 1 else if ( incomingByte = 180 incomingByte 255 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , HIGH ); Serial . println ( Liga Verde 1 ); } delay ( 250 ); } C\u00f3digo Comentado int pot = A0 ; int valor ; int vermelho = 13 ; int amarelo = 10 ; int verde2 = 7 ; int verde1 = 3 ; void setup () { Serial . begin ( 9600 ); pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde2 , OUTPUT ); pinMode ( verde1 , OUTPUT ); } void loop () { valor = analogRead ( pot ); valor = map ( valor , 0 , 1023 , 0 , 255 ); Serial . print ( Valor do Potenciometro = ); Serial . println ( valor ); //Led Vermelho if ( incomingByte = 0 incomingByte 60 ){ digitalWrite ( vermelho , HIGH ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Vermelho ); } //Led Amarelo else if ( incomingByte = 60 incomingByte 120 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Amarelo ); } //Led Verde 2 else if ( incomingByte = 120 incomingByte 180 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , HIGH ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Verde 2 ); } //Led Verde 1 else if ( incomingByte = 180 incomingByte 255 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , HIGH ); Serial . println ( Liga Verde 1 ); } delay ( 250 ); } Arquivos para Download","title":"Battery Charger"},{"location":"Projetos/batteryCharger/#battery-charger","text":"Este projeto tem como objetivo simular de forma simples o controle de carga de uma bateria comum.","title":"Battery Charger"},{"location":"Projetos/batteryCharger/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 2 Led Verde 1 Led Amarelo 1 Led Vermelho 4 Resistor 220\u03a9","title":"Lista de materiais:"},{"location":"Projetos/batteryCharger/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int pot = A0 ; int valor ; int vermelho = 13 ; int amarelo = 10 ; int verde2 = 7 ; int verde1 = 3 ; void setup () { Serial . begin ( 9600 ); } void loop () { valor = analogRead ( pot ); valor = map ( valor , 0 , 1023 , 0 , 255 ); Serial . print ( Valor do Potenciometro = ); Serial . println ( valor ); //Led Vermelho if ( incomingByte = 0 incomingByte 60 ){ digitalWrite ( vermelho , HIGH ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Vermelho ); } //Led Amarelo else if ( incomingByte = 60 incomingByte 120 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Amarelo ); } //Led Verde 2 else if ( incomingByte = 120 incomingByte 180 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , HIGH ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Verde 2 ); } //Led Verde 1 else if ( incomingByte = 180 incomingByte 255 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , HIGH ); Serial . println ( Liga Verde 1 ); } delay ( 250 ); } C\u00f3digo Comentado int pot = A0 ; int valor ; int vermelho = 13 ; int amarelo = 10 ; int verde2 = 7 ; int verde1 = 3 ; void setup () { Serial . begin ( 9600 ); pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde2 , OUTPUT ); pinMode ( verde1 , OUTPUT ); } void loop () { valor = analogRead ( pot ); valor = map ( valor , 0 , 1023 , 0 , 255 ); Serial . print ( Valor do Potenciometro = ); Serial . println ( valor ); //Led Vermelho if ( incomingByte = 0 incomingByte 60 ){ digitalWrite ( vermelho , HIGH ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Vermelho ); } //Led Amarelo else if ( incomingByte = 60 incomingByte 120 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Amarelo ); } //Led Verde 2 else if ( incomingByte = 120 incomingByte 180 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , HIGH ); digitalWrite ( verde1 , LOW ); Serial . println ( Liga Verde 2 ); } //Led Verde 1 else if ( incomingByte = 180 incomingByte 255 ){ digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde2 , LOW ); digitalWrite ( verde1 , HIGH ); Serial . println ( Liga Verde 1 ); } delay ( 250 ); }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/batteryCharger/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/blink/","text":"Blink Este projeto tem como objetivo demonstrar como realizar o acionamento e desacionamento de um LED. Lista de materiais 1 Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led; 1 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int led = 13 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { digitalWrite ( led , HIGH ); delay ( 1000 ); digitalWrite ( led , LOW ); delay ( 1000 ); } C\u00f3digo Comentado int led = 13 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { digitalWrite ( led , HIGH ); delay ( 1000 ); digitalWrite ( led , LOW ); delay ( 1000 ); } Arquivos para Download","title":"Blink"},{"location":"Projetos/blink/#blink","text":"Este projeto tem como objetivo demonstrar como realizar o acionamento e desacionamento de um LED.","title":"Blink"},{"location":"Projetos/blink/#lista-de-materiais","text":"1 Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led; 1 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/blink/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int led = 13 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { digitalWrite ( led , HIGH ); delay ( 1000 ); digitalWrite ( led , LOW ); delay ( 1000 ); } C\u00f3digo Comentado int led = 13 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { digitalWrite ( led , HIGH ); delay ( 1000 ); digitalWrite ( led , LOW ); delay ( 1000 ); }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/blink/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/button/","text":"Button Este projeto tem como objetivo demonstrar como utilizar bot\u00f5es para leitura de sinais no Arduino. Lista de materiais: 1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led 1 Tactile Switch 1 Resistor 220\u03a9 1 Resistor 10K\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int botao = 4 ; int led = 7 ; int estado ; void setup () { pinMode ( botao , INPUT ); pinMode ( led , OUTPUT ); } void loop () { estado = digitalRead ( botao ); if ( estado == HIGH ) { digitalWrite ( led , HIGH ); } else { digitalWrite ( led , LOW ); } } C\u00f3digo Comentado int botao = 4 ; int led = 7 ; int estado ; void setup () { pinMode ( botao , INPUT ); pinMode ( led , OUTPUT ); } void loop () { estado = digitalRead ( botao ); if ( estado == HIGH ) { digitalWrite ( led , HIGH ); } else { digitalWrite ( led , LOW ); } } Arquivos para Download","title":"Button"},{"location":"Projetos/button/#button","text":"Este projeto tem como objetivo demonstrar como utilizar bot\u00f5es para leitura de sinais no Arduino.","title":"Button"},{"location":"Projetos/button/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led 1 Tactile Switch 1 Resistor 220\u03a9 1 Resistor 10K\u03a9","title":"Lista de materiais:"},{"location":"Projetos/button/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int botao = 4 ; int led = 7 ; int estado ; void setup () { pinMode ( botao , INPUT ); pinMode ( led , OUTPUT ); } void loop () { estado = digitalRead ( botao ); if ( estado == HIGH ) { digitalWrite ( led , HIGH ); } else { digitalWrite ( led , LOW ); } } C\u00f3digo Comentado int botao = 4 ; int led = 7 ; int estado ; void setup () { pinMode ( botao , INPUT ); pinMode ( led , OUTPUT ); } void loop () { estado = digitalRead ( botao ); if ( estado == HIGH ) { digitalWrite ( led , HIGH ); } else { digitalWrite ( led , LOW ); } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/button/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/buttonLock/","text":"Button Lock Este projeto tem como objetivo demonstrar como podemos criar um intertravamento a fim de bloquear a execu\u00e7\u00e3o de um programa em um determinado ponto quando inserimos um sinal de entrada atrav\u00e9s de um bot\u00e3o. Lista de materiais: 1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Tactile Switch 2 Led 2 Resistor 220\u03a9 1 Resistor 10K\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int botao = 8 ; int ledBlink = 7 ; int ledButton = 9 ; int estadoLedBlink , estadoLedButton ; void setup () { pinMode ( botao , INPUT ); pinMode ( ledBlink , OUTPUT ); pinMode ( ledButton , OUTPUT ); } void loop () { estadoLedButton = digitalRead ( botao ); if ( estadoLedButton == HIGH ){ digitalWrite ( ledButton , HIGH ); while ( estadoLedButton == HIGH ){ estadoLedButton = digitalRead ( botao ); } } digitalWrite ( ledButton , LOW ); if ( estadoLedBlink == 1 ) { digitalWrite ( ledBlink , LOW ); estadoLedBlink = 0 ; } else { digitalWrite ( led , HIGH ); estadoLedBlink = 1 ; } delay ( 500 ); } C\u00f3digo Comentado int botao = 8 ; int ledBlink = 7 ; int ledButton = 9 ; int estadoLedBlink , estadoLedButton ; void setup () { pinMode ( botao , INPUT ); pinMode ( ledBlink , OUTPUT ); pinMode ( ledButton , OUTPUT ); } void loop () { estadoLedButton = digitalRead ( botao ); if ( estadoLedButton == HIGH ){ digitalWrite ( ledButton , HIGH ); while ( estadoLedButton == HIGH ){ estadoLedButton = digitalRead ( botao ); } } digitalWrite ( ledButton , LOW ); if ( estadoLedBlink == 1 ) { digitalWrite ( ledBlink , LOW ); estadoLedBlink = 0 ; } else { digitalWrite ( led , HIGH ); estadoLedBlink = 1 ; } delay ( 500 ); } Arquivos para Download","title":"Button Lock"},{"location":"Projetos/buttonLock/#button-lock","text":"Este projeto tem como objetivo demonstrar como podemos criar um intertravamento a fim de bloquear a execu\u00e7\u00e3o de um programa em um determinado ponto quando inserimos um sinal de entrada atrav\u00e9s de um bot\u00e3o.","title":"Button Lock"},{"location":"Projetos/buttonLock/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Tactile Switch 2 Led 2 Resistor 220\u03a9 1 Resistor 10K\u03a9","title":"Lista de materiais:"},{"location":"Projetos/buttonLock/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int botao = 8 ; int ledBlink = 7 ; int ledButton = 9 ; int estadoLedBlink , estadoLedButton ; void setup () { pinMode ( botao , INPUT ); pinMode ( ledBlink , OUTPUT ); pinMode ( ledButton , OUTPUT ); } void loop () { estadoLedButton = digitalRead ( botao ); if ( estadoLedButton == HIGH ){ digitalWrite ( ledButton , HIGH ); while ( estadoLedButton == HIGH ){ estadoLedButton = digitalRead ( botao ); } } digitalWrite ( ledButton , LOW ); if ( estadoLedBlink == 1 ) { digitalWrite ( ledBlink , LOW ); estadoLedBlink = 0 ; } else { digitalWrite ( led , HIGH ); estadoLedBlink = 1 ; } delay ( 500 ); } C\u00f3digo Comentado int botao = 8 ; int ledBlink = 7 ; int ledButton = 9 ; int estadoLedBlink , estadoLedButton ; void setup () { pinMode ( botao , INPUT ); pinMode ( ledBlink , OUTPUT ); pinMode ( ledButton , OUTPUT ); } void loop () { estadoLedButton = digitalRead ( botao ); if ( estadoLedButton == HIGH ){ digitalWrite ( ledButton , HIGH ); while ( estadoLedButton == HIGH ){ estadoLedButton = digitalRead ( botao ); } } digitalWrite ( ledButton , LOW ); if ( estadoLedBlink == 1 ) { digitalWrite ( ledBlink , LOW ); estadoLedBlink = 0 ; } else { digitalWrite ( led , HIGH ); estadoLedBlink = 1 ; } delay ( 500 ); }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/buttonLock/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/fadeWithFor/","text":"Fade with For Este projeto tem como objetivo demonstrar como criar o efeito de fade em leds utilizando para isso a estrutura de repeti\u00e7\u00e3o For . Lista de materiais 1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led 1 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int led = 10 ; void setup () { } void loop () { int intensidadeDaLuz ; for ( intensidadeDaLuz = 0 ; intensidadeDaLuz = 255 ; intensidadeDaLuz ++ ) { analogWrite ( led , intensidadeDaLuz ); delay ( 30 ); } } C\u00f3digo Comentado int led = 10 ; void setup () { } void loop () { int intensidadeDaLuz ; for ( intensidadeDaLuz = 0 ; intensidadeDaLuz = 255 ; intensidadeDaLuz ++ ) { analogWrite ( led , intensidadeDaLuz ); delay ( 30 ); } } Arquivos para Download","title":"Fade with For"},{"location":"Projetos/fadeWithFor/#fade-with-for","text":"Este projeto tem como objetivo demonstrar como criar o efeito de fade em leds utilizando para isso a estrutura de repeti\u00e7\u00e3o For .","title":"Fade with For"},{"location":"Projetos/fadeWithFor/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led 1 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/fadeWithFor/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int led = 10 ; void setup () { } void loop () { int intensidadeDaLuz ; for ( intensidadeDaLuz = 0 ; intensidadeDaLuz = 255 ; intensidadeDaLuz ++ ) { analogWrite ( led , intensidadeDaLuz ); delay ( 30 ); } } C\u00f3digo Comentado int led = 10 ; void setup () { } void loop () { int intensidadeDaLuz ; for ( intensidadeDaLuz = 0 ; intensidadeDaLuz = 255 ; intensidadeDaLuz ++ ) { analogWrite ( led , intensidadeDaLuz ); delay ( 30 ); } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/fadeWithFor/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/fadeWithWhile/","text":"Fade with While Este projeto tem como objetivo demonstrar como criar o efeito de fade em leds utilizando para isso a estrutura de repeti\u00e7\u00e3o While . Lista de materiais 1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led 1 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int led = 9 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { int intensidadeDaLuz = 0 ; while ( intensidadeDaLuz = 255 ){ analogWrite ( led , intensidadeDaLuz ); intensidadeDaLuz ++ ; delay ( 30 ); } } C\u00f3digo Comentado int led = 9 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { int intensidadeDaLuz = 0 ; while ( intensidadeDaLuz = 255 ){ analogWrite ( led , intensidadeDaLuz ); intensidadeDaLuz ++ ; delay ( 30 ); } } Arquivos para Download","title":"Fade with While"},{"location":"Projetos/fadeWithWhile/#fade-with-while","text":"Este projeto tem como objetivo demonstrar como criar o efeito de fade em leds utilizando para isso a estrutura de repeti\u00e7\u00e3o While .","title":"Fade with While"},{"location":"Projetos/fadeWithWhile/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led 1 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/fadeWithWhile/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int led = 9 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { int intensidadeDaLuz = 0 ; while ( intensidadeDaLuz = 255 ){ analogWrite ( led , intensidadeDaLuz ); intensidadeDaLuz ++ ; delay ( 30 ); } } C\u00f3digo Comentado int led = 9 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { int intensidadeDaLuz = 0 ; while ( intensidadeDaLuz = 255 ){ analogWrite ( led , intensidadeDaLuz ); intensidadeDaLuz ++ ; delay ( 30 ); } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/fadeWithWhile/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/helloWorld/","text":"Hello World Este projeto tem como objetivo demonstrar o uso da fun\u00e7\u00e3o Serial.println() Lista de materiais Arduino Uno Rev 3 Cabo USB Tipo A-B Modelo esquem\u00e1tico em Protoboard C\u00f3digo void setup () { Serial . begin ( 9600 ); Serial . println ( Hello World! ); } void loop () { } C\u00f3digo Comentado void setup () { Serial . begin ( 9600 ); Serial . println ( Hello World! ); } void loop () { } Arquivos para Download","title":"Hello World"},{"location":"Projetos/helloWorld/#hello-world","text":"Este projeto tem como objetivo demonstrar o uso da fun\u00e7\u00e3o Serial.println()","title":"Hello World"},{"location":"Projetos/helloWorld/#lista-de-materiais","text":"Arduino Uno Rev 3 Cabo USB Tipo A-B","title":"Lista de materiais"},{"location":"Projetos/helloWorld/#modelo-esquematico-em-protoboard","text":"C\u00f3digo void setup () { Serial . begin ( 9600 ); Serial . println ( Hello World! ); } void loop () { } C\u00f3digo Comentado void setup () { Serial . begin ( 9600 ); Serial . println ( Hello World! ); } void loop () { }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/helloWorld/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/ledRGB/","text":"Led RGB Este projeto tem como objetivo demonstrar como podemos programar o funcionamento de um Led RGB. Lista de materiais 1 Arduino Uno Rev 3 1 Led RGB 3 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int vermelho = 6 ; int verde = 5 ; int azul = 3 ; void setup () { pinMode ( vemelho , OUTPUT ); pinMode ( verde , OUTPUT ); pinMode ( azul , OUTPUT ); } void loop () { analogWrite ( vermelho , 255 ); delay ( 1000 ); analogWrite ( vermelho , 0 ); analogWrite ( verde , 255 ); delay ( 1000 ); analogWrite ( verde , 0 ); analogWrite ( azul , 255 ); delay ( 1000 ); analogWrite ( azul , 0 ); delay ( 1000 ); } C\u00f3digo Comentado int vermelho = 6 ; int verde = 5 ; int azul = 3 ; void setup () { pinMode ( vemelho , OUTPUT ); pinMode ( verde , OUTPUT ); pinMode ( azul , OUTPUT ); } void loop () { analogWrite ( vermelho , 255 ); delay ( 1000 ); analogWrite ( vermelho , 0 ); analogWrite ( verde , 255 ); delay ( 1000 ); analogWrite ( verde , 0 ); analogWrite ( azul , 255 ); delay ( 1000 ); analogWrite ( azul , 0 ); delay ( 1000 ); } Arquivos para Download","title":"Led RGB"},{"location":"Projetos/ledRGB/#led-rgb","text":"Este projeto tem como objetivo demonstrar como podemos programar o funcionamento de um Led RGB.","title":"Led RGB"},{"location":"Projetos/ledRGB/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Led RGB 3 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/ledRGB/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int vermelho = 6 ; int verde = 5 ; int azul = 3 ; void setup () { pinMode ( vemelho , OUTPUT ); pinMode ( verde , OUTPUT ); pinMode ( azul , OUTPUT ); } void loop () { analogWrite ( vermelho , 255 ); delay ( 1000 ); analogWrite ( vermelho , 0 ); analogWrite ( verde , 255 ); delay ( 1000 ); analogWrite ( verde , 0 ); analogWrite ( azul , 255 ); delay ( 1000 ); analogWrite ( azul , 0 ); delay ( 1000 ); } C\u00f3digo Comentado int vermelho = 6 ; int verde = 5 ; int azul = 3 ; void setup () { pinMode ( vemelho , OUTPUT ); pinMode ( verde , OUTPUT ); pinMode ( azul , OUTPUT ); } void loop () { analogWrite ( vermelho , 255 ); delay ( 1000 ); analogWrite ( vermelho , 0 ); analogWrite ( verde , 255 ); delay ( 1000 ); analogWrite ( verde , 0 ); analogWrite ( azul , 255 ); delay ( 1000 ); analogWrite ( azul , 0 ); delay ( 1000 ); }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/ledRGB/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/printString/","text":"Print String Este projeto tem como objetivo demonstrar como realizar a leitura e escrita de texto com o Arduino Lista de materiais Arduino Uno Rev 3 Cabo USB Tipo A-B Modelo esquem\u00e1tico em Protoboard C\u00f3digo int led = 13 ; void setup () { pinMode ( led , OUTPUT ); Serial . begin ( 9600 ); } String leStringSerial (){ String conteudo = ; char caractere ; while ( Serial . available () 0 ) { caractere = Serial . read (); if ( caractere != \\n ){ conteudo . concat ( caractere ); } delay ( 10 ); } Serial . print ( Recebi: ); Serial . println ( conteudo ); return conteudo ; } void loop () { if ( Serial . available () 0 ){ String recebido = leStringSerial (); if ( recebido == LED1:1 ){ digitalWrite ( led , HIGH ); } if ( recebido == LED1:0 ){ digitalWrite ( led , LOW ); } } } C\u00f3digo Comentado int led = 13 ; void setup () { pinMode ( led , OUTPUT ); Serial . begin ( 9600 ); } /** * Fun\u00e7\u00e3o que l\u00ea uma string da Serial * e retorna-a */ String leStringSerial (){ String conteudo = ; char caractere ; // Enquanto receber algo pela serial while ( Serial . available () 0 ) { // L\u00ea byte da serial caractere = Serial . read (); // Ignora caractere de quebra de linha if ( caractere != \\n ){ // Concatena valores conteudo . concat ( caractere ); } // Aguarda buffer serial ler pr\u00f3ximo caractere delay ( 10 ); } Serial . print ( Recebi: ); Serial . println ( conteudo ); return conteudo ; } void loop () { // Se receber algo pela serial if ( Serial . available () 0 ){ // L\u00ea toda string recebida String recebido = leStringSerial (); if ( recebido == LED1:1 ){ digitalWrite ( led , HIGH ); } if ( recebido == LED1:0 ){ digitalWrite ( led , LOW ); } } } Arquivos para Download","title":"Print String"},{"location":"Projetos/printString/#print-string","text":"Este projeto tem como objetivo demonstrar como realizar a leitura e escrita de texto com o Arduino","title":"Print String"},{"location":"Projetos/printString/#lista-de-materiais","text":"Arduino Uno Rev 3 Cabo USB Tipo A-B","title":"Lista de materiais"},{"location":"Projetos/printString/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int led = 13 ; void setup () { pinMode ( led , OUTPUT ); Serial . begin ( 9600 ); } String leStringSerial (){ String conteudo = ; char caractere ; while ( Serial . available () 0 ) { caractere = Serial . read (); if ( caractere != \\n ){ conteudo . concat ( caractere ); } delay ( 10 ); } Serial . print ( Recebi: ); Serial . println ( conteudo ); return conteudo ; } void loop () { if ( Serial . available () 0 ){ String recebido = leStringSerial (); if ( recebido == LED1:1 ){ digitalWrite ( led , HIGH ); } if ( recebido == LED1:0 ){ digitalWrite ( led , LOW ); } } } C\u00f3digo Comentado int led = 13 ; void setup () { pinMode ( led , OUTPUT ); Serial . begin ( 9600 ); } /** * Fun\u00e7\u00e3o que l\u00ea uma string da Serial * e retorna-a */ String leStringSerial (){ String conteudo = ; char caractere ; // Enquanto receber algo pela serial while ( Serial . available () 0 ) { // L\u00ea byte da serial caractere = Serial . read (); // Ignora caractere de quebra de linha if ( caractere != \\n ){ // Concatena valores conteudo . concat ( caractere ); } // Aguarda buffer serial ler pr\u00f3ximo caractere delay ( 10 ); } Serial . print ( Recebi: ); Serial . println ( conteudo ); return conteudo ; } void loop () { // Se receber algo pela serial if ( Serial . available () 0 ){ // L\u00ea toda string recebida String recebido = leStringSerial (); if ( recebido == LED1:1 ){ digitalWrite ( led , HIGH ); } if ( recebido == LED1:0 ){ digitalWrite ( led , LOW ); } } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/printString/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/projectList/","text":"\u00edndice Lista de Projetos Abaixo segue a ordem que recomendamos para a execu\u00e7\u00e3o dos projetos: Ex1. Hello World Ex2. Serial Read Ex3. Print String Ex4. Blink Ex5. Semaphore Ex6. Led RGB Ex7. Turn on/off with \u2018IF\u2019 Ex8. Turn on/off with \u2018IF ELSE\u2019 Ex9. Turn on/off with \u2018SWITCH CASE\u2019 Ex10. Button Ex11. Battery Charger Ex12. Smart Light Ex13. Fade with While Ex14. Fade with For Ex15. Lock for Button (While) Ex16. UP/DOWN Blink (For) Ex17. Turn on/off with \u2018IF ELSE\u2019 Break Ex18. Semaphore with Flashing Alert Lista de Materiais Lista de Ferramentas Equipamentos","title":"\u00cdndice"},{"location":"Projetos/projectList/#indice","text":"","title":"\u00edndice"},{"location":"Projetos/projectList/#lista-de-projetos","text":"Abaixo segue a ordem que recomendamos para a execu\u00e7\u00e3o dos projetos: Ex1. Hello World Ex2. Serial Read Ex3. Print String Ex4. Blink Ex5. Semaphore Ex6. Led RGB Ex7. Turn on/off with \u2018IF\u2019 Ex8. Turn on/off with \u2018IF ELSE\u2019 Ex9. Turn on/off with \u2018SWITCH CASE\u2019 Ex10. Button Ex11. Battery Charger Ex12. Smart Light Ex13. Fade with While Ex14. Fade with For Ex15. Lock for Button (While) Ex16. UP/DOWN Blink (For) Ex17. Turn on/off with \u2018IF ELSE\u2019 Break Ex18. Semaphore with Flashing Alert","title":"Lista de Projetos"},{"location":"Projetos/projectList/#lista-de-materiais","text":"","title":"Lista de Materiais"},{"location":"Projetos/projectList/#lista-de-ferramentas","text":"","title":"Lista de Ferramentas"},{"location":"Projetos/projectList/#equipamentos","text":"","title":"Equipamentos"},{"location":"Projetos/semaphore/","text":"Semaphore Este projeto tem como objetivo simular o funcionamento de um sem\u00e1foro. Lista de materiais 1 Arduino Uno Rev 3 1 Led Verde 1 Led amarelo 1 Led Vermelho 3 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); } void loop () { digitalWrite ( vermelho , HIGH ); delay ( 1000 ); digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); delay ( 1000 ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , HIGH ); delay ( 1000 ); digitalWrite ( verde , LOW ); delay ( 1000 ); } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); } void loop () { digitalWrite ( vermelho , HIGH ); delay ( 1000 ); digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); delay ( 1000 ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , HIGH ); delay ( 1000 ); digitalWrite ( verde , LOW ); delay ( 1000 ); } Arquivos para Download","title":"Semaphore"},{"location":"Projetos/semaphore/#semaphore","text":"Este projeto tem como objetivo simular o funcionamento de um sem\u00e1foro.","title":"Semaphore"},{"location":"Projetos/semaphore/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Led Verde 1 Led amarelo 1 Led Vermelho 3 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/semaphore/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); } void loop () { digitalWrite ( vermelho , HIGH ); delay ( 1000 ); digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); delay ( 1000 ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , HIGH ); delay ( 1000 ); digitalWrite ( verde , LOW ); delay ( 1000 ); } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); } void loop () { digitalWrite ( vermelho , HIGH ); delay ( 1000 ); digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); delay ( 1000 ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , HIGH ); delay ( 1000 ); digitalWrite ( verde , LOW ); delay ( 1000 ); }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/semaphore/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/semaphoreWithFlashingAlert/","text":"Semaphore with Flashing Alert Este projeto tem como objetivo simular um sem\u00e1foro por\u00e9m com a fun\u00e7\u00e3o de pisca alerta comumente utilizada durante a noite. Lista de materiais: 1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); } void loop () { int transicao = 3 ; while ( transicao = 3 ){ digitalWrite ( vermelho , HIGH ); delay ( 1000 ); digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); delay ( 1000 ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , HIGH ); delay ( 1000 ); digitalWrite ( verde , LOW ); delay ( 1000 ); transicao -- ; } digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , LOW ); for ( int indice = 0 ; indice 3 ; i ++ ){ digitalWrite ( amarelo , HIGH ); delay ( 150 ); digitalWrite ( amarelo , LOW ); } } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); } void loop () { int transicao = 3 ; while ( transicao = 3 ){ digitalWrite ( vermelho , HIGH ); delay ( 1000 ); digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); delay ( 1000 ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , HIGH ); delay ( 1000 ); digitalWrite ( verde , LOW ); delay ( 1000 ); transicao -- ; } digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , LOW ); for ( int indice = 0 ; indice 3 ; i ++ ){ digitalWrite ( amarelo , HIGH ); delay ( 150 ); digitalWrite ( amarelo , LOW ); } } Arquivos para Download","title":"Semaphore with Flashing Alert"},{"location":"Projetos/semaphoreWithFlashingAlert/#semaphore-with-flashing-alert","text":"Este projeto tem como objetivo simular um sem\u00e1foro por\u00e9m com a fun\u00e7\u00e3o de pisca alerta comumente utilizada durante a noite.","title":"Semaphore with Flashing Alert"},{"location":"Projetos/semaphoreWithFlashingAlert/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9","title":"Lista de materiais:"},{"location":"Projetos/semaphoreWithFlashingAlert/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); } void loop () { int transicao = 3 ; while ( transicao = 3 ){ digitalWrite ( vermelho , HIGH ); delay ( 1000 ); digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); delay ( 1000 ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , HIGH ); delay ( 1000 ); digitalWrite ( verde , LOW ); delay ( 1000 ); transicao -- ; } digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , LOW ); for ( int indice = 0 ; indice 3 ; i ++ ){ digitalWrite ( amarelo , HIGH ); delay ( 150 ); digitalWrite ( amarelo , LOW ); } } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); } void loop () { int transicao = 3 ; while ( transicao = 3 ){ digitalWrite ( vermelho , HIGH ); delay ( 1000 ); digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , HIGH ); delay ( 1000 ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , HIGH ); delay ( 1000 ); digitalWrite ( verde , LOW ); delay ( 1000 ); transicao -- ; } digitalWrite ( vermelho , LOW ); digitalWrite ( amarelo , LOW ); digitalWrite ( verde , LOW ); for ( int indice = 0 ; indice 3 ; i ++ ){ digitalWrite ( amarelo , HIGH ); delay ( 150 ); digitalWrite ( amarelo , LOW ); } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/semaphoreWithFlashingAlert/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/serialRead/","text":"Serial Read Este projeto tem como objetivo demonstrar o uso da fun\u00e7\u00e3o Serial.read() Lista de materiais Arduino Uno Rev 3 Cabo USB Tipo A-B Modelo esquem\u00e1tico em Protoboard C\u00f3digo 1 int incomingByte = 0 ; void setup () { Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte , DEC ); } } C\u00f3digo Comentado 1 int incomingByte = 0 ; void setup () { Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte , DEC ); } } C\u00f3digo 2 int incomingByte = 0 ; char inData [ 2 ]; void setup () { Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { incomingByte = Serial . read (); Serial . print ( I received: ); inData [ 0 ] = incomingByte ; inData [ 1 ] = \\0 ; Serial . println ( inData ); } } C\u00f3digo Comentado 2 int incomingByte = 0 ; char inData [ 2 ]; void setup () { Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { incomingByte = Serial . read (); Serial . print ( I received: ); inData [ 0 ] = incomingByte ; inData [ 1 ] = \\0 ; Serial . println ( inData ); } } Arquivos para Download","title":"Serial Read"},{"location":"Projetos/serialRead/#serial-read","text":"Este projeto tem como objetivo demonstrar o uso da fun\u00e7\u00e3o Serial.read()","title":"Serial Read"},{"location":"Projetos/serialRead/#lista-de-materiais","text":"Arduino Uno Rev 3 Cabo USB Tipo A-B","title":"Lista de materiais"},{"location":"Projetos/serialRead/#modelo-esquematico-em-protoboard","text":"C\u00f3digo 1 int incomingByte = 0 ; void setup () { Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte , DEC ); } } C\u00f3digo Comentado 1 int incomingByte = 0 ; void setup () { Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte , DEC ); } } C\u00f3digo 2 int incomingByte = 0 ; char inData [ 2 ]; void setup () { Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { incomingByte = Serial . read (); Serial . print ( I received: ); inData [ 0 ] = incomingByte ; inData [ 1 ] = \\0 ; Serial . println ( inData ); } } C\u00f3digo Comentado 2 int incomingByte = 0 ; char inData [ 2 ]; void setup () { Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { incomingByte = Serial . read (); Serial . print ( I received: ); inData [ 0 ] = incomingByte ; inData [ 1 ] = \\0 ; Serial . println ( inData ); } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/serialRead/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/smartLight/","text":"Smart Light Este projeto tem como objetivo demonstrar como realizar o controle de luminosidade de um led tendo como refer\u00eancia o valor de tens\u00e3o lido em um potenci\u00f4metro Lista de materiais: 1 Arduino Uno Rev 3 1 Led 1 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int ldr = A0 ; int led = 11 ; int valor ; void setup () { pinMode ( led , OUTPUT ); } void loop () { valor = analogRead ( ldr ); ldr valor = map ( valor , 0 , 1023 , 0 , 255 ); analogWrite ( led , valor ); } C\u00f3digo Comentado int ldr = A0 ; int led = 11 ; int valor ; void setup () { pinMode ( led , OUTPUT ); } void loop () { valor = analogRead ( ldr ); ldr valor = map ( valor , 0 , 1023 , 0 , 255 ); analogWrite ( led , valor ); } Arquivos para Download","title":"Smart Light"},{"location":"Projetos/smartLight/#smart-light","text":"Este projeto tem como objetivo demonstrar como realizar o controle de luminosidade de um led tendo como refer\u00eancia o valor de tens\u00e3o lido em um potenci\u00f4metro","title":"Smart Light"},{"location":"Projetos/smartLight/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Led 1 Resistor 220\u03a9","title":"Lista de materiais:"},{"location":"Projetos/smartLight/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int ldr = A0 ; int led = 11 ; int valor ; void setup () { pinMode ( led , OUTPUT ); } void loop () { valor = analogRead ( ldr ); ldr valor = map ( valor , 0 , 1023 , 0 , 255 ); analogWrite ( led , valor ); } C\u00f3digo Comentado int ldr = A0 ; int led = 11 ; int valor ; void setup () { pinMode ( led , OUTPUT ); } void loop () { valor = analogRead ( ldr ); ldr valor = map ( valor , 0 , 1023 , 0 , 255 ); analogWrite ( led , valor ); }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/smartLight/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/turnOnOffWithIf/","text":"Turn On/Off with If Este projeto tem como objetivo demonstrar o uso da estrutura de repeti\u00e7\u00e3o If no controle de execu\u00e7\u00e3o do programa. Lista de materiais Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } } Arquivos para Download","title":"Turn On/Off with If"},{"location":"Projetos/turnOnOffWithIf/#turn-onoff-with-if","text":"Este projeto tem como objetivo demonstrar o uso da estrutura de repeti\u00e7\u00e3o If no controle de execu\u00e7\u00e3o do programa.","title":"Turn On/Off with If"},{"location":"Projetos/turnOnOffWithIf/#lista-de-materiais","text":"Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/turnOnOffWithIf/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/turnOnOffWithIf/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/turnOnOffWithIfElse/","text":"Turn On/Off with If Else Este projeto tem como objetivo demonstrar o uso da estrutura de repeti\u00e7\u00e3o If Else no controle de execu\u00e7\u00e3o do programa. Lista de materiais Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } else if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo else if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } else if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde else if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } else if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } else if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo else if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } else if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde else if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } else if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } } Arquivos para Download","title":"Turn On/Off with If Else"},{"location":"Projetos/turnOnOffWithIfElse/#turn-onoff-with-if-else","text":"Este projeto tem como objetivo demonstrar o uso da estrutura de repeti\u00e7\u00e3o If Else no controle de execu\u00e7\u00e3o do programa.","title":"Turn On/Off with If Else"},{"location":"Projetos/turnOnOffWithIfElse/#lista-de-materiais","text":"Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/turnOnOffWithIfElse/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } else if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo else if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } else if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde else if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } else if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } else if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo else if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } else if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde else if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } else if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/turnOnOffWithIfElse/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/turnOnOffWithIfElseLock/","text":"Turn On/Off with If Else (Lock) Este projeto tem como objetivo demonstrar o uso da estrutura de repeti\u00e7\u00e3o While no bloqueio da fun\u00e7\u00e3o 'loop()' do Arduino. Lista de materiais Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } else if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo else if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } else if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde else if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } else if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } while ( 1 ); } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } else if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo else if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } else if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde else if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } else if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } while ( 1 ); } Arquivos para Download","title":"Turn On/Off with If Else Lock"},{"location":"Projetos/turnOnOffWithIfElseLock/#turn-onoff-with-if-else-lock","text":"Este projeto tem como objetivo demonstrar o uso da estrutura de repeti\u00e7\u00e3o While no bloqueio da fun\u00e7\u00e3o 'loop()' do Arduino.","title":"Turn On/Off with If Else (Lock)"},{"location":"Projetos/turnOnOffWithIfElseLock/#lista-de-materiais","text":"Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/turnOnOffWithIfElseLock/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } else if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo else if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } else if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde else if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } else if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } while ( 1 ); } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); //Led Vermelho if ( incomingByte == 10 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); } else if ( incomingByte == 11 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Vermelho ); } //Led Amarelo else if ( incomingByte == 20 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Amarelo ); } else if ( incomingByte == 21 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Amarelo ); } //Led Verde else if ( incomingByte == 30 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Verde ); } else if ( incomingByte == 31 ){ digitalWrite ( vermelho , HIGH ); Serial . println ( Desliga Verde ); } } while ( 1 ); }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/turnOnOffWithIfElseLock/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/turnOnOffWithSwitchCase/","text":"Turn On/Off with Switch Case Este projeto tem como objetivo demonstrar o uso da estrutura de repeti\u00e7\u00e3o Switch Case no controle de execu\u00e7\u00e3o do programa. Lista de materiais Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); switch ( incomingByte ) { //Led Vermelho case 10 : digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); break ; case 11 : digitalWrite ( vermelho , LOW ); Serial . println ( Desliga Vermelho ); break ; //Led Amarelo case 20 : digitalWrite ( amarelo , HIGH ); Serial . println ( Liga Amarelo ); break ; case 21 : digitalWrite ( amarelo , LOW ); Serial . println ( Desliga Amarelo ); break ; //Led Verde case 30 : digitalWrite ( verde , HIGH ); Serial . println ( Liga Verde ); break ; case 31 : digitalWrite ( verde , LOW ); Serial . println ( Desliga Verde ); break ; } } } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); switch ( incomingByte ) { //Led Vermelho case 10 : digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); break ; case 11 : digitalWrite ( vermelho , LOW ); Serial . println ( Desliga Vermelho ); break ; //Led Amarelo case 20 : digitalWrite ( amarelo , HIGH ); Serial . println ( Liga Amarelo ); break ; case 21 : digitalWrite ( amarelo , LOW ); Serial . println ( Desliga Amarelo ); break ; //Led Verde case 30 : digitalWrite ( verde , HIGH ); Serial . println ( Liga Verde ); break ; case 31 : digitalWrite ( verde , LOW ); Serial . println ( Desliga Verde ); break ; } } } Arquivos para Download","title":"Turn On/Off with Switch Case"},{"location":"Projetos/turnOnOffWithSwitchCase/#turn-onoff-with-switch-case","text":"Este projeto tem como objetivo demonstrar o uso da estrutura de repeti\u00e7\u00e3o Switch Case no controle de execu\u00e7\u00e3o do programa.","title":"Turn On/Off with Switch Case"},{"location":"Projetos/turnOnOffWithSwitchCase/#lista-de-materiais","text":"Arduino Uno Rev 3 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermelho 3 Resistor 220\u03a9","title":"Lista de materiais"},{"location":"Projetos/turnOnOffWithSwitchCase/#modelo-esquematico-em-protoboard","text":"C\u00f3digo int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); switch ( incomingByte ) { //Led Vermelho case 10 : digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); break ; case 11 : digitalWrite ( vermelho , LOW ); Serial . println ( Desliga Vermelho ); break ; //Led Amarelo case 20 : digitalWrite ( amarelo , HIGH ); Serial . println ( Liga Amarelo ); break ; case 21 : digitalWrite ( amarelo , LOW ); Serial . println ( Desliga Amarelo ); break ; //Led Verde case 30 : digitalWrite ( verde , HIGH ); Serial . println ( Liga Verde ); break ; case 31 : digitalWrite ( verde , LOW ); Serial . println ( Desliga Verde ); break ; } } } C\u00f3digo Comentado int vermelho = 11 ; int amarelo = 10 ; int verde = 9 ; void setup () { pinMode ( vermelho , OUTPUT ); pinMode ( amarelo , OUTPUT ); pinMode ( verde , OUTPUT ); Serial . begin ( 9600 ); } void loop () { if ( Serial . available () 0 ) { int incomingByte = Serial . read (); Serial . print ( I received: ); Serial . println ( incomingByte ); switch ( incomingByte ) { //Led Vermelho case 10 : digitalWrite ( vermelho , HIGH ); Serial . println ( Liga Vermelho ); break ; case 11 : digitalWrite ( vermelho , LOW ); Serial . println ( Desliga Vermelho ); break ; //Led Amarelo case 20 : digitalWrite ( amarelo , HIGH ); Serial . println ( Liga Amarelo ); break ; case 21 : digitalWrite ( amarelo , LOW ); Serial . println ( Desliga Amarelo ); break ; //Led Verde case 30 : digitalWrite ( verde , HIGH ); Serial . println ( Liga Verde ); break ; case 31 : digitalWrite ( verde , LOW ); Serial . println ( Desliga Verde ); break ; } } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/turnOnOffWithSwitchCase/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Projetos/upDownBlink/","text":"Up Down Blink Este projeto tem como objetivo demonstrar como realizar o acionamento de uma barra de leds em sequ\u00eancia com a utili\u00e7\u00e3o da estrutura de repeti\u00e7\u00e3o For . Lista de materiais: 1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermeho 3 Resistor 220\u03a9 Modelo esquem\u00e1tico em Protoboard C\u00f3digo void setup () { for ( int thisLed = 9 ; thisLed = 11 ; thisLed ++ ) { pinMode ( thisLed , OUTPUT ); } } void loop () { for ( int thisLed = 9 ; thisLed = 11 ; thisLed ++ ) { digitalWrite ( thisLed , HIGH ); delay ( 1000 ); digitalWrite ( thisLed , LOW ); } for ( int thisLed = 11 ; thisLed = 9 ; thisLed -- ) { digitalWrite ( thisLed , HIGH ); delay ( 1000 ); digitalWrite ( thisLed , LOW ); } } C\u00f3digo Comentado void setup () { for ( int thisLed = 9 ; thisLed = 11 ; thisLed ++ ) { pinMode ( thisLed , OUTPUT ); } } void loop () { for ( int thisLed = 9 ; thisLed = 11 ; thisLed ++ ) { digitalWrite ( thisLed , HIGH ); delay ( 1000 ); digitalWrite ( thisLed , LOW ); } for ( int thisLed = 11 ; thisLed = 9 ; thisLed -- ) { digitalWrite ( thisLed , HIGH ); delay ( 1000 ); digitalWrite ( thisLed , LOW ); } } Arquivos para Download","title":"Up Down Blink"},{"location":"Projetos/upDownBlink/#up-down-blink","text":"Este projeto tem como objetivo demonstrar como realizar o acionamento de uma barra de leds em sequ\u00eancia com a utili\u00e7\u00e3o da estrutura de repeti\u00e7\u00e3o For .","title":"Up Down Blink"},{"location":"Projetos/upDownBlink/#lista-de-materiais","text":"1 Arduino Uno Rev 3 1 Cabo USB Tipo A-B 1 Led Verde 1 Led Amarelo 1 Led Vermeho 3 Resistor 220\u03a9","title":"Lista de materiais:"},{"location":"Projetos/upDownBlink/#modelo-esquematico-em-protoboard","text":"C\u00f3digo void setup () { for ( int thisLed = 9 ; thisLed = 11 ; thisLed ++ ) { pinMode ( thisLed , OUTPUT ); } } void loop () { for ( int thisLed = 9 ; thisLed = 11 ; thisLed ++ ) { digitalWrite ( thisLed , HIGH ); delay ( 1000 ); digitalWrite ( thisLed , LOW ); } for ( int thisLed = 11 ; thisLed = 9 ; thisLed -- ) { digitalWrite ( thisLed , HIGH ); delay ( 1000 ); digitalWrite ( thisLed , LOW ); } } C\u00f3digo Comentado void setup () { for ( int thisLed = 9 ; thisLed = 11 ; thisLed ++ ) { pinMode ( thisLed , OUTPUT ); } } void loop () { for ( int thisLed = 9 ; thisLed = 11 ; thisLed ++ ) { digitalWrite ( thisLed , HIGH ); delay ( 1000 ); digitalWrite ( thisLed , LOW ); } for ( int thisLed = 11 ; thisLed = 9 ; thisLed -- ) { digitalWrite ( thisLed , HIGH ); delay ( 1000 ); digitalWrite ( thisLed , LOW ); } }","title":"Modelo esquem\u00e1tico em Protoboard"},{"location":"Projetos/upDownBlink/#arquivos-para-download","text":"","title":"Arquivos para Download"},{"location":"Teoria/Programacao/","text":"Trabalhar com Arduino \u00e9 bastante simples sua programa\u00e7\u00e3o \u00e9 dividida em dois blocos que s\u00e3o escritos em linguagem C/C++. Um dos blocos no escopo do c\u00f3digo \u00e9 o void setup() , onde faremos a configura\u00e7\u00e3o dos pinos a serem utilizados. No outro bloco, o void loop() , ser\u00e1 executado o c\u00f3digo de comando em ciclos repetitivos. Abaixo segue o exemplo mais simples dispon\u00edvel mostrando o uso dos dois blocos: int led = 13 ; void setup () { pinMode ( led , OUTPUT ); } void loop () { digitalWrite ( led , HIGH ); delay ( 1000 ); digitalWrite ( led , LOW ); delay ( 1000 ); } O c\u00f3digo acima \u00e9 um simples teste onde o primeiro bloco est\u00e1 dizendo que o pino 13 (led) do Arduino ser\u00e1 sa\u00edda, e no segundo est\u00e1 dizendo que a sa\u00edda ser\u00e1 alta (5V) por mil milissegundos (1 segundo) e em seguida ficar\u00e1 desligada tamb\u00e9m por mil milissegundos. Vale observar que a fun\u00e7\u00e3o delay() conta o tempo em milissegundos. Operadores Saber usar os operadores de maneira correta \u00e9 essencial na programa\u00e7\u00e3o tanto operadores aritm\u00e9ticos, l\u00f3gicos e de compara\u00e7\u00e3o, por isso segue abaixo a tabela com os s\u00edmbolos e suas respectivas fun\u00e7\u00f5es: S\u00edmbolos Fun\u00e7\u00f5es Tipo x++ x = x + 1 Aritm\u00e9tica x-- x = x - 1 Aritm\u00e9tica x += y x = x + y Aritm\u00e9tica x -= y x = x - y Aritm\u00e9tica x *= y x = x * y Aritm\u00e9tica x /= y x = x / y Aritm\u00e9tica x ==y x \u00c9 igual a y Compara\u00e7\u00e3o x != y x \u00e9 diferente de y Compara\u00e7\u00e3o x y x \u00e9 menor que y Compara\u00e7\u00e3o x y x \u00e9 maior que y Compara\u00e7\u00e3o x = y x \u00e9 menor igual y Compara\u00e7\u00e3o x = y x \u00e9 maior igual y Compara\u00e7\u00e3o Porta l\u00f3gica \u201cE\u201d (AND) L\u00f3gicos ! Porta l\u00f3gica \u201cN\u00c3O\u201d (NOT) L\u00f3gicos Constantes Constantes s\u00e3o valores que n\u00e3o podem ser alterados, normalmente assumem dois valores e podem ser interpretados como n\u00fameros bin\u00e1rios 0 (zero) e 1 (um). TRUE/FALSE: s\u00e3o constantes booleanas que definem estados l\u00f3gicos. Verdadeiro \u00e9 qualquer valor que n\u00e3o seja zero. Falso \u00e9 sempre o valor zero. HIGH/LOW: essas constantes definem as tens\u00f5es nos pinos digitais do Arduino. Alto \u00e9 uma tens\u00e3o de 5 volts; baixo, o terra (ou 0 volt). INPUT/OUTPUT: s\u00e3o constantes programadas pela fun\u00e7\u00e3o pinMode() para os pinos do Arduino; eles podem ser entradas (de sensores), INPUT ou podem ser sa\u00eddas (de controle), OUTPUT. Vari\u00e1veis As vari\u00e1veis s\u00e3o posi\u00e7\u00f5es na mem\u00f3ria do programa que possuem um nome e o tipo de informa\u00e7\u00e3o que ir\u00e3o guardar. Essas posi\u00e7\u00f5es podem inicialmente estar vazias ou contar algum valor e sempre podem ser alteradas pelo programa ou pelo programador. A vari\u00e1vel deve ser declarada antes de ser chamada e deve constituir de um nome e o tipo. Uma vari\u00e1vel pode ser global ou local de acordo de onde ela foi declarada, se for logo no in\u00edcio, antes da fun\u00e7\u00e3o void setup(), ela ser\u00e1 global e pode ser usada e \u201cvista\u201d por qualquer fun\u00e7\u00e3o do programa. Se for declarada dentro de uma fun\u00e7\u00e3o, ela ser\u00e1 local e ser\u00e1 usada e \u201cvista\u201d somente por essa fun\u00e7\u00e3o. - byte - esse tipo armazena 8 bits (0-255); - int - armazena n\u00fameros inteiros de at\u00e9 16 bits; - long - armazena n\u00fameros inteiros de at\u00e9 32 bits; - float - vari\u00e1veis deste tipo podem armazenar n\u00fameros fracion\u00e1rios de at\u00e9 32 bits. As vezes temos que guardar v\u00e1rias vari\u00e1veis do mesmo tipo e us\u00e1-las com frequ\u00eancia. Sendo assim, guardamos em vetores. Abaixo mostramos como montar vetores no Arduino, lembrando que sempre a primeira posi\u00e7\u00e3o ser\u00e1 a posi\u00e7\u00e3o 0. - Para declarar vetores diga seu tipo e um nome seguido de colchetes, quando declarar valores separe-os com v\u00edrgula e sempre entre chaves como no exemplo: int nomeVetor [ ] = {1, 3, 4, 7} ; - Pode-se tamb\u00e9m declarar o tamanho do vetor, para isso coloque o n\u00famero de termos entre os colchetes como no exemplo: int nomeVetor[13] ; - Pode-se tamb\u00e9m armazenar um determinado valor em um lugar espec\u00edfico do vetor como no exemplo que guarda um inteiro de valor 2 na posi\u00e7\u00e3o 8 do vetor: int nomeVetor[8]= 2 ; Fun\u00e7\u00f5es Muitas vezes precisamos executar a mesma tarefa diversas vezes. Quando isso acontece, para diminuir as chances de erros e deixar o c\u00f3digo mais claro criamos fun\u00e7\u00f5es. No Arduino tamb\u00e9m utilizamos muito essa ferramenta. Abaixo segue de modo simplificado como criar fun\u00e7\u00f5es no Arduino e tem basicamente a seguinte estrutura: Tipo da fun\u00e7\u00e3o (int, float, char, bool, etc) Nome da fun\u00e7\u00e3o (o nome que achar melhor) Os par\u00e2metros que s\u00e3o passados para a fun\u00e7\u00e3o Opera\u00e7\u00e3o que deseja que a fun\u00e7\u00e3o execute Retorno do valor (ou valores) que a fun\u00e7\u00e3o calculou Abaixo temos um exemplo de fun\u00e7\u00e3o que recebe os valores de a, b, c, calcula as ra\u00edzes e retorna a raiz positiva x1; int bhaskaraFunction ( int a , b , c ) { double delta , x1 , x2 ; delta = sq ( b ) - 4 * a * c ; x1 = ( - b + sqrt ( delta )) / 2 ; x2 = ( - b - sqrt ( delta )) / 2 ; return x1 ; } Temos fun\u00e7\u00f5es na biblioteca do Arduino que s\u00e3o muito \u00fateis. Essas fun\u00e7\u00f5es podem ser de tempo, matem\u00e1ticas e de entrada e sa\u00edda. Segue algumas principais delas com seus respectivos usos: Fun\u00e7\u00f5es Matem\u00e1ticas Fun\u00e7\u00e3o Fun\u00e7\u00e3o Descri\u00e7\u00e3o pow(base, exp) pow(base, exp) Elevar um n\u00famero \u00e0 pot\u00eancia sq(x) sq(x) Eleva x ao quadrado sqrt(k) sqrt(k) Raiz quadrada de k abs(y) abs(y) M\u00f3dulo de y, valor absoluto min(x, y) min(x, y) Retorna menor n\u00famero entre x e y int max(x, y) max(x, y) Retorna maior n\u00famero entre x e y int random(min, max) random(min, max) Retorna n\u00famero aleat\u00f3rio entre min e max Fun\u00e7\u00f5es de Tempo delay(ms) delay(ms) Pausa o programa por ms milissegundos delayMicroseconds(us) delayMicroseconds(us) Pausa o programa por us microsegundos millis(t) / micro(us) millis(t) / micro(us) Tempo em milissegundos / micro segundos desde que programa come\u00e7ou a executar Fun\u00e7\u00f5es de Entrada e Sa\u00edda pinMode(pin, I/O) pinMode(pin, I/O) Configura pino espec\u00edfico para ser I/O digitalWrite( ) digitalWrite( ) Escreve HIGH/LOW em um pino digital digitalRead( ) digitalRead( ) L\u00ea HIGH/LOW no pino digital espec\u00edfico analogWrite( ) analogWrite( ) Escreve valor anal\u00f3gico PWM em um pino analogRead( ) analogRead( ) L\u00ea valor de tens\u00e3o no pino espec\u00edfico Estruturas de Sele\u00e7\u00e3o Em diversos momentos precisamos definir pontos de escolha em nossos programas de tal forma a mudar o fluxo de eventos do algortmo. Para isso temos as chamadas estruturas de sele\u00e7\u00e3o, as quais nos permitem tomar tais escolhas dentro do programa. If (condicional) e if... Else \u00c9 um la\u00e7o de controle de fluxo onde ele executa certas instru\u00e7\u00f5es somente se as condi\u00e7\u00f5es dentro dos par\u00eanteses forem aceitas. As instru\u00e7\u00f5es devem ser colocadas depois do if e dentro de chaves (recomendado) ou n\u00e3o. Exemplo de uso do if: if ( x 120 ) digitalWrite ( LEDpin1 , HIGH ); if ( x 120 ) digitalWrite ( LEDpin , HIGH ); if ( x 120 ) { digitalWrite ( LEDpin2 , HIGH ); } if ( x = 120 ) { digitalWrite ( LEDpin1 , HIGH ); digitalWrite ( LEDpin2 , HIGH ); } Se acrescentarmos mais um bloco de instru\u00e7\u00f5es, pode-se criar o comando if... else, que nada mais \u00e9 se a primeira condi\u00e7\u00e3o (if) n\u00e3o for satisfeita o programa atua com as instru\u00e7\u00f5es dentro de else. O exemplo abaixo ilustra isso: If ( x 120 ) { digitalWrite ( LEDpin1 , HIGH ); digitalWrite ( LEDpin2 , HIGH ); } else { digitalWrite ( LEDpin1 , LOW ); digitalWrite ( LEDpin2 , LOW ); } digitalWrite ( LEDpin2 , HIGH ); Switch...case Esse la\u00e7o controla o fluxo de programas permitindo o programador especificar diferentes c\u00f3digos que dever\u00e3o ser executados em diferentes condi\u00e7\u00f5es. O switch compara o valor especificado com as senten\u00e7as e quando o valor \u00e9 o mesmo, ele executa o c\u00f3digo. Usualmente coloca-se a palavra break, assim quando uma condi\u00e7\u00e3o \u00e9 aceita o programa para de executar e pula para a pr\u00f3xima a\u00e7\u00e3o. switch ( var ) { case var = 1 : digitalWrite ( LEDpin1 , HIGH ); break ; case var = 2 : digitalWrite ( LEDpin1 , LOW ); break ; case var = 3 : digitalWrite ( LEDpin2 , HIGH ); break ; case var = 4 : digitalWrite ( LEDpin2 , LOW ); break ; } Estruturas de Repeti\u00e7\u00e3o Nos c\u00f3digos dos programas muitas vezes \u00e9 preciso executar uma fun\u00e7\u00e3o diversas vezes ou at\u00e9 que uma certa condi\u00e7\u00e3o seja satisfeita. Para isso, usamos os comandos de la\u00e7o que nada mais s\u00e3o comandos de repeti\u00e7\u00e3o para se fazer uma determinada tarefa ou estabelecer o que fazer caso ela n\u00e3o seja feita. Os la\u00e7os mais comuns s\u00e3o: While \u00c9 um dos la\u00e7os mais usado nos programas. Sua fun\u00e7\u00e3o \u00e9 executar determinadas instru\u00e7\u00f5es at\u00e9 que uma condi\u00e7\u00e3o inicialmente verdadeira se torne falsa ou o contr\u00e1rio. var = 0 ; while ( var 200 ) { digitalWrite ( LEDpin1 , HIGH ) var ++ ; } For A declara\u00e7\u00e3o for \u00e9 a mais utilizada na programa\u00e7\u00e3o e \u00e9 usada para repetir as instru\u00e7\u00f5es colocadas entre chaves. Normalmente se usa um contador para fazer o ciclo desejado. Esse la\u00e7o \u00e9 dividido em tr\u00eas partes: for(inicializa\u00e7\u00e3o; condi\u00e7\u00e3o; incremento). Note que cada par\u00e2metro dentro do par\u00eanteses \u00e9 separado por ponto e v\u00edrgula. int PWMpin = 10 ; void setup () {} void loop () { for ( int i = 0 ; i = 255 ; i ++ ) { analogWrite ( PWMpin , i ); delay ( 10 ); } }","title":"Programa\u00e7\u00e3o"},{"location":"Teoria/Programacao/#operadores","text":"Saber usar os operadores de maneira correta \u00e9 essencial na programa\u00e7\u00e3o tanto operadores aritm\u00e9ticos, l\u00f3gicos e de compara\u00e7\u00e3o, por isso segue abaixo a tabela com os s\u00edmbolos e suas respectivas fun\u00e7\u00f5es: S\u00edmbolos Fun\u00e7\u00f5es Tipo x++ x = x + 1 Aritm\u00e9tica x-- x = x - 1 Aritm\u00e9tica x += y x = x + y Aritm\u00e9tica x -= y x = x - y Aritm\u00e9tica x *= y x = x * y Aritm\u00e9tica x /= y x = x / y Aritm\u00e9tica x ==y x \u00c9 igual a y Compara\u00e7\u00e3o x != y x \u00e9 diferente de y Compara\u00e7\u00e3o x y x \u00e9 menor que y Compara\u00e7\u00e3o x y x \u00e9 maior que y Compara\u00e7\u00e3o x = y x \u00e9 menor igual y Compara\u00e7\u00e3o x = y x \u00e9 maior igual y Compara\u00e7\u00e3o Porta l\u00f3gica \u201cE\u201d (AND) L\u00f3gicos ! Porta l\u00f3gica \u201cN\u00c3O\u201d (NOT) L\u00f3gicos","title":"Operadores"},{"location":"Teoria/Programacao/#constantes","text":"Constantes s\u00e3o valores que n\u00e3o podem ser alterados, normalmente assumem dois valores e podem ser interpretados como n\u00fameros bin\u00e1rios 0 (zero) e 1 (um). TRUE/FALSE: s\u00e3o constantes booleanas que definem estados l\u00f3gicos. Verdadeiro \u00e9 qualquer valor que n\u00e3o seja zero. Falso \u00e9 sempre o valor zero. HIGH/LOW: essas constantes definem as tens\u00f5es nos pinos digitais do Arduino. Alto \u00e9 uma tens\u00e3o de 5 volts; baixo, o terra (ou 0 volt). INPUT/OUTPUT: s\u00e3o constantes programadas pela fun\u00e7\u00e3o pinMode() para os pinos do Arduino; eles podem ser entradas (de sensores), INPUT ou podem ser sa\u00eddas (de controle), OUTPUT.","title":"Constantes"},{"location":"Teoria/Programacao/#variaveis","text":"As vari\u00e1veis s\u00e3o posi\u00e7\u00f5es na mem\u00f3ria do programa que possuem um nome e o tipo de informa\u00e7\u00e3o que ir\u00e3o guardar. Essas posi\u00e7\u00f5es podem inicialmente estar vazias ou contar algum valor e sempre podem ser alteradas pelo programa ou pelo programador. A vari\u00e1vel deve ser declarada antes de ser chamada e deve constituir de um nome e o tipo. Uma vari\u00e1vel pode ser global ou local de acordo de onde ela foi declarada, se for logo no in\u00edcio, antes da fun\u00e7\u00e3o void setup(), ela ser\u00e1 global e pode ser usada e \u201cvista\u201d por qualquer fun\u00e7\u00e3o do programa. Se for declarada dentro de uma fun\u00e7\u00e3o, ela ser\u00e1 local e ser\u00e1 usada e \u201cvista\u201d somente por essa fun\u00e7\u00e3o. - byte - esse tipo armazena 8 bits (0-255); - int - armazena n\u00fameros inteiros de at\u00e9 16 bits; - long - armazena n\u00fameros inteiros de at\u00e9 32 bits; - float - vari\u00e1veis deste tipo podem armazenar n\u00fameros fracion\u00e1rios de at\u00e9 32 bits. As vezes temos que guardar v\u00e1rias vari\u00e1veis do mesmo tipo e us\u00e1-las com frequ\u00eancia. Sendo assim, guardamos em vetores. Abaixo mostramos como montar vetores no Arduino, lembrando que sempre a primeira posi\u00e7\u00e3o ser\u00e1 a posi\u00e7\u00e3o 0. - Para declarar vetores diga seu tipo e um nome seguido de colchetes, quando declarar valores separe-os com v\u00edrgula e sempre entre chaves como no exemplo: int nomeVetor [ ] = {1, 3, 4, 7} ; - Pode-se tamb\u00e9m declarar o tamanho do vetor, para isso coloque o n\u00famero de termos entre os colchetes como no exemplo: int nomeVetor[13] ; - Pode-se tamb\u00e9m armazenar um determinado valor em um lugar espec\u00edfico do vetor como no exemplo que guarda um inteiro de valor 2 na posi\u00e7\u00e3o 8 do vetor: int nomeVetor[8]= 2 ;","title":"Vari\u00e1veis"},{"location":"Teoria/Programacao/#funcoes","text":"Muitas vezes precisamos executar a mesma tarefa diversas vezes. Quando isso acontece, para diminuir as chances de erros e deixar o c\u00f3digo mais claro criamos fun\u00e7\u00f5es. No Arduino tamb\u00e9m utilizamos muito essa ferramenta. Abaixo segue de modo simplificado como criar fun\u00e7\u00f5es no Arduino e tem basicamente a seguinte estrutura: Tipo da fun\u00e7\u00e3o (int, float, char, bool, etc) Nome da fun\u00e7\u00e3o (o nome que achar melhor) Os par\u00e2metros que s\u00e3o passados para a fun\u00e7\u00e3o Opera\u00e7\u00e3o que deseja que a fun\u00e7\u00e3o execute Retorno do valor (ou valores) que a fun\u00e7\u00e3o calculou Abaixo temos um exemplo de fun\u00e7\u00e3o que recebe os valores de a, b, c, calcula as ra\u00edzes e retorna a raiz positiva x1; int bhaskaraFunction ( int a , b , c ) { double delta , x1 , x2 ; delta = sq ( b ) - 4 * a * c ; x1 = ( - b + sqrt ( delta )) / 2 ; x2 = ( - b - sqrt ( delta )) / 2 ; return x1 ; } Temos fun\u00e7\u00f5es na biblioteca do Arduino que s\u00e3o muito \u00fateis. Essas fun\u00e7\u00f5es podem ser de tempo, matem\u00e1ticas e de entrada e sa\u00edda. Segue algumas principais delas com seus respectivos usos: Fun\u00e7\u00f5es Matem\u00e1ticas Fun\u00e7\u00e3o Fun\u00e7\u00e3o Descri\u00e7\u00e3o pow(base, exp) pow(base, exp) Elevar um n\u00famero \u00e0 pot\u00eancia sq(x) sq(x) Eleva x ao quadrado sqrt(k) sqrt(k) Raiz quadrada de k abs(y) abs(y) M\u00f3dulo de y, valor absoluto min(x, y) min(x, y) Retorna menor n\u00famero entre x e y int max(x, y) max(x, y) Retorna maior n\u00famero entre x e y int random(min, max) random(min, max) Retorna n\u00famero aleat\u00f3rio entre min e max Fun\u00e7\u00f5es de Tempo delay(ms) delay(ms) Pausa o programa por ms milissegundos delayMicroseconds(us) delayMicroseconds(us) Pausa o programa por us microsegundos millis(t) / micro(us) millis(t) / micro(us) Tempo em milissegundos / micro segundos desde que programa come\u00e7ou a executar Fun\u00e7\u00f5es de Entrada e Sa\u00edda pinMode(pin, I/O) pinMode(pin, I/O) Configura pino espec\u00edfico para ser I/O digitalWrite( ) digitalWrite( ) Escreve HIGH/LOW em um pino digital digitalRead( ) digitalRead( ) L\u00ea HIGH/LOW no pino digital espec\u00edfico analogWrite( ) analogWrite( ) Escreve valor anal\u00f3gico PWM em um pino analogRead( ) analogRead( ) L\u00ea valor de tens\u00e3o no pino espec\u00edfico","title":"Fun\u00e7\u00f5es"},{"location":"Teoria/Programacao/#estruturas-de-selecao","text":"Em diversos momentos precisamos definir pontos de escolha em nossos programas de tal forma a mudar o fluxo de eventos do algortmo. Para isso temos as chamadas estruturas de sele\u00e7\u00e3o, as quais nos permitem tomar tais escolhas dentro do programa.","title":"Estruturas de Sele\u00e7\u00e3o"},{"location":"Teoria/Programacao/#if-condicional-e-if-else","text":"\u00c9 um la\u00e7o de controle de fluxo onde ele executa certas instru\u00e7\u00f5es somente se as condi\u00e7\u00f5es dentro dos par\u00eanteses forem aceitas. As instru\u00e7\u00f5es devem ser colocadas depois do if e dentro de chaves (recomendado) ou n\u00e3o. Exemplo de uso do if: if ( x 120 ) digitalWrite ( LEDpin1 , HIGH ); if ( x 120 ) digitalWrite ( LEDpin , HIGH ); if ( x 120 ) { digitalWrite ( LEDpin2 , HIGH ); } if ( x = 120 ) { digitalWrite ( LEDpin1 , HIGH ); digitalWrite ( LEDpin2 , HIGH ); } Se acrescentarmos mais um bloco de instru\u00e7\u00f5es, pode-se criar o comando if... else, que nada mais \u00e9 se a primeira condi\u00e7\u00e3o (if) n\u00e3o for satisfeita o programa atua com as instru\u00e7\u00f5es dentro de else. O exemplo abaixo ilustra isso: If ( x 120 ) { digitalWrite ( LEDpin1 , HIGH ); digitalWrite ( LEDpin2 , HIGH ); } else { digitalWrite ( LEDpin1 , LOW ); digitalWrite ( LEDpin2 , LOW ); } digitalWrite ( LEDpin2 , HIGH );","title":"If (condicional) e if... Else"},{"location":"Teoria/Programacao/#switchcase","text":"Esse la\u00e7o controla o fluxo de programas permitindo o programador especificar diferentes c\u00f3digos que dever\u00e3o ser executados em diferentes condi\u00e7\u00f5es. O switch compara o valor especificado com as senten\u00e7as e quando o valor \u00e9 o mesmo, ele executa o c\u00f3digo. Usualmente coloca-se a palavra break, assim quando uma condi\u00e7\u00e3o \u00e9 aceita o programa para de executar e pula para a pr\u00f3xima a\u00e7\u00e3o. switch ( var ) { case var = 1 : digitalWrite ( LEDpin1 , HIGH ); break ; case var = 2 : digitalWrite ( LEDpin1 , LOW ); break ; case var = 3 : digitalWrite ( LEDpin2 , HIGH ); break ; case var = 4 : digitalWrite ( LEDpin2 , LOW ); break ; }","title":"Switch...case"},{"location":"Teoria/Programacao/#estruturas-de-repeticao","text":"Nos c\u00f3digos dos programas muitas vezes \u00e9 preciso executar uma fun\u00e7\u00e3o diversas vezes ou at\u00e9 que uma certa condi\u00e7\u00e3o seja satisfeita. Para isso, usamos os comandos de la\u00e7o que nada mais s\u00e3o comandos de repeti\u00e7\u00e3o para se fazer uma determinada tarefa ou estabelecer o que fazer caso ela n\u00e3o seja feita. Os la\u00e7os mais comuns s\u00e3o:","title":"Estruturas de Repeti\u00e7\u00e3o"},{"location":"Teoria/Programacao/#while","text":"\u00c9 um dos la\u00e7os mais usado nos programas. Sua fun\u00e7\u00e3o \u00e9 executar determinadas instru\u00e7\u00f5es at\u00e9 que uma condi\u00e7\u00e3o inicialmente verdadeira se torne falsa ou o contr\u00e1rio. var = 0 ; while ( var 200 ) { digitalWrite ( LEDpin1 , HIGH ) var ++ ; }","title":"While"},{"location":"Teoria/Programacao/#for","text":"A declara\u00e7\u00e3o for \u00e9 a mais utilizada na programa\u00e7\u00e3o e \u00e9 usada para repetir as instru\u00e7\u00f5es colocadas entre chaves. Normalmente se usa um contador para fazer o ciclo desejado. Esse la\u00e7o \u00e9 dividido em tr\u00eas partes: for(inicializa\u00e7\u00e3o; condi\u00e7\u00e3o; incremento). Note que cada par\u00e2metro dentro do par\u00eanteses \u00e9 separado por ponto e v\u00edrgula. int PWMpin = 10 ; void setup () {} void loop () { for ( int i = 0 ; i = 255 ; i ++ ) { analogWrite ( PWMpin , i ); delay ( 10 ); } }","title":"For"},{"location":"Teoria/introducao/","text":"Introdu\u00e7\u00e3o O Que \u00e9 exatamente um Arduino? O Arduino \u00e9 uma placa composta por um microcontrolador Atmel, circuitos de entrada/sa\u00edda e que pode ser facilmente conectada \u00e0 um computador e programada via IDE (Integrated Development Environment, ou Ambiente de Desenvolvimento Integrado), utilizando uma linguagem baseada em C/C++ sem a necessidade de equipamentos extras al\u00e9m de um cabo USB. Em outras palavras, Arduino \u00e9 um pequeno computador que voc\u00ea pode programar atrav\u00e9s de outro computador, utilizando um software (IDE) para processar sinais de entradas e acionar sa\u00eddas. O Arduino funcionar\u00e1 independente de um computador posteriormente. O que fazemos com um Arduino As possibilidades de aplica\u00e7\u00e3o com Arduino s\u00e3o infinitas. Os programas s\u00e3o extremamente flex\u00edveis, ou seja, podem ser alterados para executar as fun\u00e7\u00f5es exatamente como desejado. H\u00e1 tamb\u00e9m uma enorme gama de sensores e atuadores, que s\u00e3o conectados as Entradas e Sa\u00eddas do Arduino. Esses sensores e atuadores s\u00e3o conhecidos como m\u00f3dulos. Os m\u00f3dulos podem ser utilizados em um projeto para ler sinais espec\u00edficos, como corrente, temperatura, etc. e acionar atuadores espec\u00edficos, como l\u00e2mpadas, reles, etc. A Imagem abaixo ilustra alguns dos m\u00f3dulos mais comuns: Fonte: https://www.filipeflop.com/blog/o-que-e-arduino/ Como funciona o Arduino A placa Arduino UNO \u00e9 composta por 14 entradas e sa\u00eddas digitais, das quais 6 podem ser usadas como PWM, al\u00e9m de conter 6 entradas anal\u00f3gicas. As 6 entradas anal\u00f3gicas est\u00e3o nos pinos denominados A0 at\u00e9 A5. Os pinos que podem ser usados como sa\u00edda PWM s\u00e3o os 3, 5, 6, 9, 10 e 11 usando a fun\u00e7\u00e3o analogWrite. H\u00e1 tamb\u00e9m os pinos TX (que transmitem) e RX (que recebe) dados via serial que podem ser enviados a m\u00f3dulos que convertem esse sinal em outra forma, como por exemplo um m\u00f3dulo Bluetooth. O Arduino pode ser alimentado tanto via USB como por fonte externa (DC ou bateria). A placa trabalha com tens\u00e3o entre 6V a 20V, por\u00e9m usando menos que 7V, o pino de alimenta\u00e7\u00e3o de 5V pode fornecer menos que isso e a placa ficar\u00e1 inst\u00e1vel. J\u00e1 uma tens\u00e3o acima de 12V pode causar algum dano \u00e0 ela. Sendo assim a faixa ideal de tens\u00e3o para se trabalhar \u00e9 entre 7V a 12V. O pino Vin \u00e9 um pino interligado diretamente \u00e0 entrada de tens\u00e3o realizada no plug DC, ou seja, se eu estiver entrando com 12V no pino de DC, estar\u00e1 saindo 12V no Vin. Os pinos 5V e 3V3 fornecem esses respectivos valores de tens\u00e3o para um circuito externo (protoboard), os dois pinos Gnd s\u00e3o terra e o pino RESET serve para resetar o Arduino quando fornecido tens\u00e3o nele. A figura abaixo mostra esses pinos. O Arduino pode fornecer e receber apenas 40mA em cada pino, podendo danific\u00e1-la caso seja fornecido uma corrente maior. H\u00e1 tamb\u00e9m um resistor de pull up interno de 20-50 kOhm. A quadro abaixo mostra os dados completos da placa Arduino UNO. Microcontrolador ATmega328 Tens\u00e3o de opera\u00e7\u00e3o 5v Tens\u00e3o de entrada (recomendada) 7-12v Tens\u00e3o de entrada (limites) 6-20V Pinos de I/O Digitais 14 (6 deles com sa\u00edda PWM) Pinos Anal\u00f3gicos 6 Corrente CC por I/O Pino 40mA Corrente do Pino 3.3V 50mA Mem\u00f3ria Flash 32 KB (ATmega328) 0.5 KB SRAM 2 KB (ATmega328) EEPROM 1 KB (ATmega328) Velocidade do Clock 16MHz Instalando a IDE Voc\u00ea vai precisar de acesso \u00e0 Internet para baixar o Arduino IDE (Integrated Development Environment). Ap\u00f3s baixar o software do site voc\u00ea pode clicar no \u00edcone do aplicativo para abri-lo direto, como na imagem abaixo: Ou voc\u00ea pode clicar no \u00edcone do aplicativo .exe e instal\u00e1-lo em seu PC. N\u00e3o h\u00e1 complica\u00e7\u00f5es na instala\u00e7\u00e3o, somente aceite os termos e espere finalizar. Como funciona o IDE? O IDE \u00e9 dividido em tr\u00eas partes: a barra de ferramentas que fica na parte superior, a janela de c\u00f3digo no centro, e na janela de mensagens na parte inferior. Selecionar Tipo de Arduino Voc\u00ea deve conferir se o modelo da placa utilizado est\u00e1 configurado no programa. Para isso, v\u00e1 em Tools Board (na barra de ferramentas), em seguida escolha o modelo da placa Arduino que est\u00e1 utilizando como mostra a figura abaixo: Selecionar Porta de Comunica\u00e7\u00e3o \u00c9 necess\u00e1rio selecionar a porta correta para comunica\u00e7\u00e3o entre o Arduino e o Computador. Para isso, v\u00e1 at\u00e9 o menu Tools - Port - COM3 . A porta varia de acordo com a entrada USB que voc\u00ea conectou sua placa.","title":"Introdu\u00e7\u00e3o"},{"location":"Teoria/introducao/#introducao","text":"","title":"Introdu\u00e7\u00e3o"},{"location":"Teoria/introducao/#o-que-e-exatamente-um-arduino","text":"O Arduino \u00e9 uma placa composta por um microcontrolador Atmel, circuitos de entrada/sa\u00edda e que pode ser facilmente conectada \u00e0 um computador e programada via IDE (Integrated Development Environment, ou Ambiente de Desenvolvimento Integrado), utilizando uma linguagem baseada em C/C++ sem a necessidade de equipamentos extras al\u00e9m de um cabo USB. Em outras palavras, Arduino \u00e9 um pequeno computador que voc\u00ea pode programar atrav\u00e9s de outro computador, utilizando um software (IDE) para processar sinais de entradas e acionar sa\u00eddas. O Arduino funcionar\u00e1 independente de um computador posteriormente.","title":"O Que \u00e9 exatamente um Arduino?"},{"location":"Teoria/introducao/#o-que-fazemos-com-um-arduino","text":"As possibilidades de aplica\u00e7\u00e3o com Arduino s\u00e3o infinitas. Os programas s\u00e3o extremamente flex\u00edveis, ou seja, podem ser alterados para executar as fun\u00e7\u00f5es exatamente como desejado. H\u00e1 tamb\u00e9m uma enorme gama de sensores e atuadores, que s\u00e3o conectados as Entradas e Sa\u00eddas do Arduino. Esses sensores e atuadores s\u00e3o conhecidos como m\u00f3dulos. Os m\u00f3dulos podem ser utilizados em um projeto para ler sinais espec\u00edficos, como corrente, temperatura, etc. e acionar atuadores espec\u00edficos, como l\u00e2mpadas, reles, etc. A Imagem abaixo ilustra alguns dos m\u00f3dulos mais comuns: Fonte: https://www.filipeflop.com/blog/o-que-e-arduino/","title":"O que fazemos com um Arduino"},{"location":"Teoria/introducao/#como-funciona-o-arduino","text":"A placa Arduino UNO \u00e9 composta por 14 entradas e sa\u00eddas digitais, das quais 6 podem ser usadas como PWM, al\u00e9m de conter 6 entradas anal\u00f3gicas. As 6 entradas anal\u00f3gicas est\u00e3o nos pinos denominados A0 at\u00e9 A5. Os pinos que podem ser usados como sa\u00edda PWM s\u00e3o os 3, 5, 6, 9, 10 e 11 usando a fun\u00e7\u00e3o analogWrite. H\u00e1 tamb\u00e9m os pinos TX (que transmitem) e RX (que recebe) dados via serial que podem ser enviados a m\u00f3dulos que convertem esse sinal em outra forma, como por exemplo um m\u00f3dulo Bluetooth. O Arduino pode ser alimentado tanto via USB como por fonte externa (DC ou bateria). A placa trabalha com tens\u00e3o entre 6V a 20V, por\u00e9m usando menos que 7V, o pino de alimenta\u00e7\u00e3o de 5V pode fornecer menos que isso e a placa ficar\u00e1 inst\u00e1vel. J\u00e1 uma tens\u00e3o acima de 12V pode causar algum dano \u00e0 ela. Sendo assim a faixa ideal de tens\u00e3o para se trabalhar \u00e9 entre 7V a 12V. O pino Vin \u00e9 um pino interligado diretamente \u00e0 entrada de tens\u00e3o realizada no plug DC, ou seja, se eu estiver entrando com 12V no pino de DC, estar\u00e1 saindo 12V no Vin. Os pinos 5V e 3V3 fornecem esses respectivos valores de tens\u00e3o para um circuito externo (protoboard), os dois pinos Gnd s\u00e3o terra e o pino RESET serve para resetar o Arduino quando fornecido tens\u00e3o nele. A figura abaixo mostra esses pinos. O Arduino pode fornecer e receber apenas 40mA em cada pino, podendo danific\u00e1-la caso seja fornecido uma corrente maior. H\u00e1 tamb\u00e9m um resistor de pull up interno de 20-50 kOhm. A quadro abaixo mostra os dados completos da placa Arduino UNO. Microcontrolador ATmega328 Tens\u00e3o de opera\u00e7\u00e3o 5v Tens\u00e3o de entrada (recomendada) 7-12v Tens\u00e3o de entrada (limites) 6-20V Pinos de I/O Digitais 14 (6 deles com sa\u00edda PWM) Pinos Anal\u00f3gicos 6 Corrente CC por I/O Pino 40mA Corrente do Pino 3.3V 50mA Mem\u00f3ria Flash 32 KB (ATmega328) 0.5 KB SRAM 2 KB (ATmega328) EEPROM 1 KB (ATmega328) Velocidade do Clock 16MHz","title":"Como funciona o Arduino"},{"location":"Teoria/introducao/#instalando-a-ide","text":"Voc\u00ea vai precisar de acesso \u00e0 Internet para baixar o Arduino IDE (Integrated Development Environment). Ap\u00f3s baixar o software do site voc\u00ea pode clicar no \u00edcone do aplicativo para abri-lo direto, como na imagem abaixo: Ou voc\u00ea pode clicar no \u00edcone do aplicativo .exe e instal\u00e1-lo em seu PC. N\u00e3o h\u00e1 complica\u00e7\u00f5es na instala\u00e7\u00e3o, somente aceite os termos e espere finalizar.","title":"Instalando a IDE"},{"location":"Teoria/introducao/#como-funciona-o-ide","text":"O IDE \u00e9 dividido em tr\u00eas partes: a barra de ferramentas que fica na parte superior, a janela de c\u00f3digo no centro, e na janela de mensagens na parte inferior.","title":"Como funciona o IDE?"},{"location":"Teoria/introducao/#selecionar-tipo-de-arduino","text":"Voc\u00ea deve conferir se o modelo da placa utilizado est\u00e1 configurado no programa. Para isso, v\u00e1 em Tools Board (na barra de ferramentas), em seguida escolha o modelo da placa Arduino que est\u00e1 utilizando como mostra a figura abaixo:","title":"Selecionar Tipo de Arduino"},{"location":"Teoria/introducao/#selecionar-porta-de-comunicacao","text":"\u00c9 necess\u00e1rio selecionar a porta correta para comunica\u00e7\u00e3o entre o Arduino e o Computador. Para isso, v\u00e1 at\u00e9 o menu Tools - Port - COM3 . A porta varia de acordo com a entrada USB que voc\u00ea conectou sua placa.","title":"Selecionar Porta de Comunica\u00e7\u00e3o"}]}